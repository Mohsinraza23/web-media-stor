'use client'
// // import type { Metadata } from "next";
// // import localFont from "next/font/local";
// // import "./globals.css";
// // import { Header } from "@/components/Header";
// // import { Footer } from "@/components/Footer";
// // import { CartProvider } from "./components/CartContext"


// // const geistSans = localFont({
// //   src: "./fonts/GeistVF.woff",
// //   variable: "--font-geist-sans",
// //   weight: "100 900",
// // });
// // const geistMono = localFont({
// //   src: "./fonts/GeistMonoVF.woff",
// //   variable: "--font-geist-mono",
// //   weight: "100 900",
// // });

// // export const metadata: Metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app",
// // };

// // export default function RootLayout({
// //   children,
// // }: Readonly<{
// //   children: React.ReactNode;
// // }>) {
// //   return (
// //     <html lang="en">
// //       <body
// //         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
// //       >
// //         <Header/>
// //         <CartProvider>{children}</CartProvider>
// //         <Footer/>
// //       </body>
// //     </html>
// //   );
// // }
// 'use client';

// import localFont from "next/font/local";
// import "./globals.css";
// import { useState } from "react";
// import { Header } from "@/components/Header";
// import { Footer } from "@/components/Footer";
// import { CartProvider } from "./components/CartContext";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   const [darkMode, setDarkMode] = useState(false);

//   const toggleDarkMode = () => {
//     setDarkMode((prev) => !prev);
//   };

//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased ${
//           darkMode ? "dark" : ""
//         }`}
//       >
//         <Header darkMode={darkMode} toggleDarkMode={toggleDarkMode} />
//         <CartProvider>{children}</CartProvider>
//         <Footer />
//       </body>
//     </html>
//   );
// }
// 'use client'
// // import type { Metadata } from "next";
// // import localFont from "next/font/local";
// // import "./globals.css";
// // import { Header } from "@/components/Header";
// // import { Footer } from "@/components/Footer";
// // import { CartProvider } from "./components/CartContext"


// // const geistSans = localFont({
// //   src: "./fonts/GeistVF.woff",
// //   variable: "--font-geist-sans",
// //   weight: "100 900",
// // });
// // const geistMono = localFont({
// //   src: "./fonts/GeistMonoVF.woff",
// //   variable: "--font-geist-mono",
// //   weight: "100 900",
// // });

// // export const metadata: Metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app",
// // };

// // export default function RootLayout({
// //   children,
// // }: Readonly<{
// //   children: React.ReactNode;
// // }>) {
// //   return (
// //     <html lang="en">
// //       <body
// //         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
// //       >
// //         <Header/>
// //         <CartProvider>{children}</CartProvider>
// //         <Footer/>
// //       </body>
// //     </html>
// //   );
// // }
// 'use client';

// import localFont from "next/font/local";
// import "./globals.css";
// import { useState } from "react";
// import { Header } from "@/components/Header";
// import { Footer } from "@/components/Footer";
// import { CartProvider } from "./components/CartContext";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   const [darkMode, setDarkMode] = useState(false);

//   const toggleDarkMode = () => {
//     setDarkMode((prev) => !prev);
//   };

//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased ${
//           darkMode ? "dark" : ""
//         }`}
//       >
//         <Header darkMode={darkMode} toggleDarkMode={toggleDarkMode} />
//         <CartProvider>{children}</CartProvider>
//         <Footer />
//       </body>
//     </html>
//   );
// }
import React, { useState } from "react";
import "./globals.css";
import { Header } from "@/components/Header";
import { Footer } from "@/components/Footer";
import Script from "next/script";

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // State to manage dark mode
  const [darkMode, setDarkMode] = useState(false);

  // Toggle dark mode function
  const toggleDarkMode = () => {
    setDarkMode((prev) => !prev);
  };

  return (
    <html lang="en" className={darkMode ? "dark" : ""}>
      <head>
        <link rel="preconnect" href="https://app.snipcart.com" />
        <link rel="preconnect" href="https://cdn.snipcart.com" />
        <link
          rel="stylesheet"
          href="https://cdn.snipcart.com/themes/v3.2.2/default/snipcart.css"
        />
      </head>
      <body>
        <Header darkMode={darkMode} toggleDarkMode={toggleDarkMode} />
        <main>{children}</main>
        <Footer />

        {/* Snipcart Script */}
        <Script id="snipcart-settings" strategy="afterInteractive">
          {`
            window.SnipcartSettings = {
              publicApiKey: 'NDMyNjY3ZjMtYjYxYy00NTEzLWFhZGMtYmUyZGQ2Yjg3MTk2NjM4NzE2NDkyNjg1MjU4OTc4',
              loadStrategy: 'on-user-interaction',
            };
          `}
        </Script>
        <Script
          src="https://cdn.snipcart.com/themes/v3.2.2/default/snipcart.js"
          strategy="afterInteractive"
        />
        <div
          hidden
          id="snipcart"
          data-api-key="YTkyZTk5ODQtYjNiNC00ZGQ1LThhNGQtYzM2M2QzZDJkNjI2NjM4NzM1ODAyNTc3NTc0MjUx"
          data-config-modal-style="side"
        ></div>
      </body>
    </html>
  );
}


